<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sojson.common.dao.UTbDealerMapper" >
  <resultMap id="dealerResultMap" type="com.sojson.common.model.TbDealer" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="FK_USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="PARENT_ID" property="parentId" jdbcType="VARCHAR" />
    <result column="DEL_FLAG" property="delFlag" jdbcType="TINYINT" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="SEAT_NUM" property="seatNum" jdbcType="TINYINT" />
    <result column="INVITE_NUM" property="inviteNum" jdbcType="TINYINT" />
    <result column="D_GROUP" property="dGroup" jdbcType="VARCHAR" />
    <result column="CRT_TIME" property="crtTime" jdbcType="TIMESTAMP" />
    <result column="MOD_TIME" property="modTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="dealer_Column_List" >
    d.ID,d.NAME,d.PHONE,d.ADDRESS,d.TYPE,d.crt_time,d.SEAT_NUM,d.INVITE_NUM,d.PARENT_ID,d.FK_USER_ID,d.D_GROUP,d.STATUS AS state
  </sql>
  <sql id="dealer_limit_sql">
  	   <if test="page_sql != null and page_sql != ''">
      	${page_sql}
      </if>
  </sql>
  
  <sql id="dealer_where_all">
  	<where>
      d.DEL_FLAG = 0
      <if test="findContent != null and findContent !=''">
        and (d.name like LOWER(CONCAT('%',#{findContent,jdbcType=VARCHAR},'%'))
        or u.email like LOWER(CONCAT('%',#{findContent,jdbcType=VARCHAR},'%')))
      </if>
      <if test="parentId != null and parentId !='' " >
        and PARENT_ID = #{parentId}
      </if>
      <if test="all != null and all !='' " >
        and PARENT_ID != 0
      </if>
      <if test="dGroup != null and dGroup !='' " >
        and D_GROUP = #{dGroup}
      </if>
     </where>
  </sql>

  <sql id="dealer_order_all">
    ORDER BY d.crt_time desc
  </sql>
  <select id="findAll" resultMap="dealerResultMap" >
  	select
    <include refid="dealer_Column_List" />,
    u.email as loginName,u.status as status,u.id as userId
    from tb_dealer d
    LEFT JOIN u_user u
    ON u.id = d.FK_USER_ID
    <include refid="dealer_where_all"/>
    <include refid="dealer_order_all"/>
    <include refid="dealer_limit_sql" />
  </select>
  <select id="findCount" resultMap="dealerResultMap" >
 	 select count(d.id) from  tb_dealer d
  	<include refid="dealer_where_all" />
  </select>

  <select id="queryDealerCount" resultType="int">
    select count(d.id) from  tb_dealer d
    where d.DEL_FLAG = 0 and d.PARENT_ID=0
  </select>
  
  <select id="getSeatNumByUserId" parameterType="String" resultType="String">
    select SEAT_NUM from tb_dealer
    where DEL_FLAG = 0 and FK_USER_ID = #{userId}
  </select>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.sojson.common.model.TbDealer" >
    insert into tb_dealer (ID,FK_USER_ID,NAME,PARENT_ID,PHONE,ADDRESS,DEL_FLAG,TYPE,CRT_TIME,SEAT_NUM,INVITE_NUM, D_GROUP, STATUS)
    values (#{id},#{userId},#{name},#{parentId},#{phone},#{address},#{delFlag},#{type},#{crtTime},#{seatNum},#{inviteNum},#{dGroup}, #{state})
  </insert>
  <update id="update" parameterType="com.sojson.common.model.TbDealer" >
    update tb_dealer
    <set>
      MOD_TIME = #{modTime,jdbcType=TIMESTAMP}
      <if test="name != null and name !=''" >
        ,NAME = #{name,jdbcType=VARCHAR}
      </if>
      <if test="type != null and type != ''">
        ,TYPE = #{type}
      </if>
      <if test="phone != null and phone != ''">
        ,PHONE = #{phone}
      </if>
      <if test="address != null and address != ''">
        ,ADDRESS = #{address}
      </if>
      <if test="dGroup != null and dGroup != ''">
        ,D_GROUP = #{dGroup}
      </if>
      <if test="state != null and state != ''">
        ,STATUS = #{state}
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <update id="delete" parameterType="String">
    update tb_dealer
    <set >
      DEL_FLAG = 1
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <select id="findDealerByUserId" resultMap="dealerResultMap" >
    select
    <include refid="dealer_Column_List" />
    from tb_dealer d
    where d.FK_USER_ID = #{userId}
  </select>

  <select id="findDealerByPhone" resultMap="dealerResultMap" >
    select
    <include refid="dealer_Column_List" />
    from tb_dealer d
    where d.PHONE = #{phone}
  </select>

  <select id="findDealerByInviteCode" resultMap="dealerResultMap" >
    select
    <include refid="dealer_Column_List" />
    from tb_dealer d
    where d.INVITE_NUM = #{inviteNum}
  </select>

  <select id="findDealerBySeatNum" resultMap="dealerResultMap" >
    select
    <include refid="dealer_Column_List" />
    from tb_dealer d
    where d.SEAT_NUM = #{seatNum}
    AND d.DEL_FLAG = 0
    AND d.PARENT_ID=0
  </select>

  <select id="queryUserType" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT TYPE FROM u_role WHERE id =(
      SELECT rid FROM u_user_role WHERE uid=#{userId})
  </select>


  <select id="queryUserRoles" parameterType="java.lang.String" resultType="java.lang.String">
  SELECT CONCAT(',',group_concat(u.TYPE),',') FROM u_role u WHERE u.id in(
   select t.rid from u_user_role t where t.uid =#{userId})
  </select>


  <select id="queryMoney" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT ROUND((T1.total*T2.type) / 100, 2) FROM
    (SELECT SUM(amount) AS total FROM tb_vip_record WHERE vip_id IN
    (SELECT id FROM tb_vip WHERE INVITAION_CODE=(
    SELECT invite_num FROM tb_dealer WHERE FK_USER_ID =#{userId}))) T1,
    (SELECT TYPE FROM tb_dealer WHERE FK_USER_ID =#{userId}) T2
  </select>

  <select id="findDealerIds" resultMap="dealerResultMap" >
    select
    <include refid="dealer_Column_List" />
    from tb_dealer d
    <include refid="dealerId_where"/>
  </select>


  <sql id="dealerId_where">
    <where>
      d.DEL_FLAG = 0
      <if test="dealerId != null " >
        and (PARENT_ID = #{dealerId} OR FK_USER_ID = #{dealerId})
      </if>
      <if test="name != null and name != '' " >
        and d.name like LOWER(CONCAT('%',#{name,jdbcType=VARCHAR},'%'))
      </if>
      <if test="groupName != null and groupName != '' " >
        and d.D_GROUP like LOWER(CONCAT('%',#{groupName,jdbcType=VARCHAR},'%'))
      </if>
    </where>
  </sql>


  <select id="queryEmployeeList" resultMap="dealerResultMap" >
    SELECT
    <include refid="dealer_Column_List" />
    FROM tb_dealer d
    WHERE d.SEAT_NUM =(SELECT SEAT_NUM FROM tb_dealer WHERE INVITE_NUM=#{inviteCode})
    AND d.DEL_FLAG = 0
    AND d.PARENT_ID!=0
  </select>

  <select id="queryDealerList" resultMap="dealerResultMap" >
    SELECT
    <include refid="dealer_Column_List" />
    FROM tb_dealer d
    WHERE d.DEL_FLAG = 0
    AND d.PARENT_ID = 0
  </select>

  <select id="queryDealerStatus" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT STATUS FROM tb_dealer WHERE FK_USER_ID=#{userId}
  </select>

  <select id="queryEmplyoeeStatus" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT STATUS FROM tb_dealer WHERE FK_USER_ID = (SELECT PARENT_ID FROM tb_dealer WHERE FK_USER_ID=#{userId})
  </select>

  <select id="queryRoleByUserId" parameterType="java.lang.String" resultType="com.sojson.common.model.URole">
    SELECT * FROM u_role WHERE id =
    (SELECT rid FROM u_user_role WHERE uid=#{userId})
  </select>
</mapper>
